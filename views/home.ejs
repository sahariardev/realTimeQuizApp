<%- include('./partials/header') %>
<script src="/socket.io/socket.io.js"></script>
<div class="body-container">
    <div id="rooms-container">

    </div>
    <div id="quiz-container" class="hide">
        <div>
            Quiz Section
        </div>
        <div id="quiz-body">

        </div>
        <div id="quiz-section-footer">
            <div class="btn" id="back-to-room-btn">Back To Rooms</div>
        </div>
    </div>
    <div id="result-container" class="hide"></div>
    <div id="wait-container" class="hide"></div>
    <script>
        const roomsContainerHtml = document.getElementById('rooms-container');
        const resultContainerHtml = document.getElementById('result-container');
        const waitContainerHtml = document.getElementById('wait-container');
        const quizContainerHtml = document.getElementById('quiz-container');
        const backToRoomBtn = document.getElementById('back-to-room-btn');
        const quizBodyHtml = document.getElementById('quiz-body');

        const socket = io('http://localhost:8000/default');
        socket.on('connect', () => {
            console.log('Connected');
        });

        socket.on('ROOMS_UPDATED', (data) => {
            cleanDiv(roomsContainerHtml);
            data.rooms.forEach((room) => {
                roomsContainerHtml.append(getRoomDiv(room));
            });
        });

        socket.on('SHOW_QUESTION', (question) => {
            renderQuestion(question);
        });

        socket.on('SHOW_RESULT', (result) => {
            renderResult(result);
        });

        backToRoomBtn.addEventListener('click', () => {
            roomsContainerHtml.classList.remove('hide');
            quizContainerHtml.classList.add('hide');
            quizContainerHtml.classList.remove('flex');
        });

        const cleanDiv = (elem) => {
            elem.innerHTML = '';
        }

        const getRoomDiv = ({roomName, roomId}) => {
            const div = document.createElement('div');
            div.innerHTML = roomName;
            div.classList.add('room-container');
            div.setAttribute('data-room-id', roomId);

            const userIdSpan = document.createElement('span');
            userIdSpan.classList.add('user-id');
            const userIdInput = document.createElement('input');
            userIdInput.classList.add('options');
            userIdInput.setAttribute('placeholder', 'username')
            userIdInput.setAttribute('type', 'text');

            const btn = document.createElement('button');
            btn.innerHTML = 'Join'

            div.append(userIdSpan);
            div.append(userIdInput);
            div.append(btn);

            btn.addEventListener('click', (e) => {
                socket.emit('JOIN_ROOM', {
                    roomId: e.target.parentElement.getAttribute('data-room-id'),
                    userId: e.target.parentElement.querySelector('input').value
                }, (response) => {
                    if (response.status === 'OK') {
                        roomsContainerHtml.classList.add('hide');
                        quizContainerHtml.classList.remove('hide');
                        quizContainerHtml.classList.add('flex');

                    } else {
                        roomsContainerHtml.classList.add('hide');
                        alert(response.message);
                    }
                });

            });

            return div;
        }

        const renderQuestion = ({question, options, id}) => {
            hideWaitView();
            hideResultView();
            quizBodyHtml.innerHTML = '';
            const questionDiv = document.createElement('div');
            questionDiv.classList.add('question');
            questionDiv.innerHTML = question;
            quizBodyHtml.append(questionDiv);

            const optionDiv = document.createElement('div');
            optionDiv.classList.add('options');

            for (const option of options) {
                const optionContainer = document.createElement('div');
                const input = document.createElement('input');
                input.setAttribute('name', id);
                input.setAttribute('value', option);
                input.setAttribute('type', 'radio');
                optionContainer.append(input);

                const label = document.createElement('label');
                label.innerHTML = option;

                optionContainer.append(label);
                optionDiv.append(optionContainer);
            }

            quizBodyHtml.append(optionDiv);

            const submitBtnDiv = document.createElement('div');
            submitBtnDiv.classList.add('btn');
            submitBtnDiv.innerHTML = 'Submit';

            submitBtnDiv.addEventListener('click', (e) => {
                const answer = document.querySelector('input[name="' + id + '"]:checked').value;
                socket.emit('USER_ANSWER', {questionId: id, answer: answer});
                hideQuizView();
                showWaitView();
            });

            quizBodyHtml.append(submitBtnDiv);
        }

        const hideQuizView = () => {
            quizContainerHtml.classList.add('hide');
            quizContainerHtml.classList.remove('flex');
        }

        const showQuizView = () => {
            quizContainerHtml.classList.remove('hide');
            quizContainerHtml.classList.add('flex');
        }

        const hideResultView = () => {
            resultContainerHtml.classList.add('hide');
        }

        const showResultView = () => {
            resultContainerHtml.classList.remove('hide');
        }

        const hideWaitView = () => {
            waitContainerHtml.classList.add('hide');
        }

        const showWaitView = () => {
            waitContainerHtml.classList.remove('hide');
        }

        const renderResult = (result) => {
            hideQuizView();
            hideWaitView();

            resultContainerHtml.innerHTML = '';
            const resultDiv = document.createElement('div');
            resultDiv.classList.add('text-left');
            let rank = 0;
            for (const r of result) {
                rank++;
                resultDiv.append(getPointDiv(r, rank));
            }

            resultContainerHtml.append(resultDiv);
            showResultView();
        }

        const showWait = () => {
            const waitSpan = document.createElement('div');
            waitSpan.classList.add('wait-container')
            quizBodyHtml.innerHTML = '';
            quizBodyHtml.append(waitSpan);
        }

        const getPointDiv = ({userId, points}, rank) => {
            const pointContainerDiv = document.createElement('div');
            pointContainerDiv.innerHTML = `${rank} ${userId} (${points})`;

            return pointContainerDiv;
        }

    </script>
</div>
<%- include('./partials/footer') %>