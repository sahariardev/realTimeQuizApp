<%- include('./partials/header') %>
<script src="/socket.io/socket.io.js"></script>
<div class="body-container">
    <h1 id="room-title" data-room-id="<%= room.roomId %>">Admin In Room: <%= room.roomName %></h1>
    <div class="section-body-container">
        <div class="question-form-container section-container">
            <div>
                <div class="question-sections">
                    <span>Question</span>
                    <input type="text" name="question" class="question" placeholder="Question">
                </div>

                <div class="question-sections">
                    <span class="option-title">Option 1</span>
                    <input type="text" class="options">
                </div>

                <div class="question-sections">
                    <span class="option-title">Option 2</span>
                    <input type="text" class="options">
                </div>

                <div class="additional-option">

                </div>

                <div class="answer-sections">
                    <span class="title">Answer</span>
                    <input type="text" class="answer">
                </div>

                <button type="button" id="add-new-option-btn">Add New Option</button>
                <button type="button" id="add-question">Add Question</button>
            </div>
        </div>
        <div class="question-container section-container">

        </div>

        <div class="">
            <button type="button" id="show-result-btn">Show Result</button>
        </div>
    </div>
</div>
<script>
    // socket connection
    const socket = io('http://localhost:8000/default');
    socket.on('connect', () => {
        console.log('Connected');
    });

    const addNewOptionBtn = document.getElementById('add-new-option-btn');
    const showResultBtn = document.getElementById('show-result-btn');
    const roomTitleElem = document.getElementById('room-title');
    const addQuestion = document.getElementById('add-question');
    const additionOptionSection = document.querySelector('.additional-option');
    const questionInput = document.querySelector('.question');
    const answerInput = document.querySelector('.answer');
    const questionContainerElem = document.querySelector('.question-container');
    const roomId = roomTitleElem.getAttribute('data-room-id');

    socket.emit('ADMIN_JOIN_ROOM', roomId);

    showResultBtn.addEventListener('click', () => {
      socket.emit('REQUEST_TO_SHOW_RESULT');
    });

    addNewOptionBtn.addEventListener('click', () => {
        const optionSectionDiv = document.createElement('div');
        optionSectionDiv.classList.add('question-sections');

        const optionTitleSpan = document.createElement('span');
        optionTitleSpan.classList.add('option-title');
        const optionInput = document.createElement('input');
        optionInput.classList.add('options');
        optionInput.setAttribute('type', 'text');

        const removeLink = document.createElement('a');
        removeLink.innerHTML = 'Remove';
        removeLink.classList.add('remove-link');

        removeLink.addEventListener('click', (e) => {
            e.target.parentElement.remove();
            generateOptionTitles();
        });

        optionSectionDiv.append(optionTitleSpan);
        optionSectionDiv.append(optionInput);
        optionSectionDiv.append(removeLink);

        additionOptionSection.append(optionSectionDiv);

        generateOptionTitles();
    });

    addQuestion.addEventListener('click', () => {
        const data = {
            question: questionInput.value,
            options: [],
            answer: answerInput.value
        }

        for (const elem of document.querySelectorAll('.options')) {
            data.options.push(elem.value);
        }

        socket.emit('ADD_QUESTION', data, roomId);

        cleanQuestionContainer();
    });

    const generateOptionTitles = () => {
        let itemCount = 0;
        for (const elem of document.querySelectorAll('.option-title')) {
            itemCount++;
            elem.innerHTML = `Option ${itemCount} `;
        }
    }

    const cleanQuestionContainer = () => {
        additionOptionSection.innerHTML = '';
        for (elem of document.querySelectorAll('.options')) {
            elem.value = '';
        }
        questionInput.value = '';
        answerInput.value = '';
    }

    socket.on('QUESTION_UPDATED', (questions) => {
        questionContainerElem.innerHTML = '';
        let count = 0;
        for (const question of questions) {
            count++;
            renderQuestion(question, count);
        }
    });

    const renderQuestion = (question, questionNumber) => {
        const divElem = document.createElement('div');
        divElem.classList.add('question-view-container');
        divElem.setAttribute('data-question-id', question.id);

        const q = document.createElement('div');
        q.innerHTML = `${questionNumber}. ${question.question}`;

        divElem.append(q);

        let count = 0;
        for (const option of question.options) {
            count++;

            const optionElem = document.createElement('div');
            optionElem.innerHTML = `Option ${count}: ${option}`;
            divElem.append(optionElem)
        }

        const answerElem = document.createElement('div');
        answerElem.innerHTML = `Answer is : ${question.rightAnswer}`;
        divElem.append(answerElem);

        const btnElem = document.createElement('button');
        btnElem.innerHTML = 'Show';
        btnElem.addEventListener('click', (e) => {
            socket.emit('REQUEST_TO_SHOW_QUESTION', {
                questionId: e.target.parentElement.getAttribute('data-question-id'),
                roomId: roomId
            });
        });

        divElem.append(btnElem);

        questionContainerElem.append(divElem);
    }

</script>

<%- include('./partials/footer') %>